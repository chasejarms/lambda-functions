AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Functions for the elastic project management application.
Resources:
    ProdPubliclyAccessibleApi:
        Type: AWS::Serverless::Api
        Properties:
            StageName: Prod
            Name: Prod Publicly Accessible Api
    SignUpNewUserFunction:
        Type: AWS::Serverless::Function
        Properties:
            Events:
                ApiEvent:
                    Type: Api
                    Properties:
                        Path: /sign-up-new-user
                        Method: post
                        RestApiId:
                            Ref: ProdPubliclyAccessibleApi
            Runtime: nodejs14.x
            Handler: index.signUpNewUser
            FunctionName: SignUpNewUser
            Policies:
                - AmazonDynamoDBFullAccess
            CodeUri: code/built/signUpNewUser
    ProdCognitoUserPool:
        Type: AWS::Cognito::UserPool
        Properties:
            AdminCreateUserConfig:
                AllowAdminCreateUserOnly: false
                InviteMessageTemplate:
                    EmailMessage: "Welcome to Elastic Project Management. Your username is {username} and temporary password is {####}. Visit elasticprojectmanagement.com/sign-in to sign in."
                    EmailSubject: "Elastic Project Management - Temporary Credentials"
            EmailConfiguration:
                SourceArn: arn:aws:ses:us-east-1:454305280052:identity/chasejarms@gmail.com
                EmailSendingAccount: DEVELOPER
                From: chasejarms@gmail.com
                ReplyToEmailAddress: chasejarms@gmail.com
            Policies:
                PasswordPolicy:
                    MinimumLength: 8
                    RequireLowercase: true
                    RequireNumbers: true
                    RequireSymbols: false
                    RequireUppercase: true
                    TemporaryPasswordValidityDays: 7
            AccountRecoverySetting:
                RecoveryMechanisms:
                    - Name: verified_email
                      Priority: 1
            UsernameConfiguration:
                CaseSensitive: false
            UsernameAttributes:
                - email
            VerificationMessageTemplate:
                DefaultEmailOption: CONFIRM_WITH_LINK
                EmailMessageByLink: "Welcome to Elastic Project Management. Please click the following link to verify your email: {##Verify Email##}"
                EmailSubjectByLink: "Elastic Project Management - Verification Link"
            AutoVerifiedAttributes:
                - email
            UserPoolName: ProdElasticProjectManagement
    ProdBackendAppClient:
        Type: AWS::Cognito::UserPoolClient
        Properties:
            ClientName: ElasticProjectManagementBackendClient
            GenerateSecret: false
            UserPoolId: !Ref ProdCognitoUserPool
    ProdUserPoolDomain:
        Type: AWS::Cognito::UserPoolDomain
        Properties:
            Domain: elastic-project-management
            UserPoolId: !Ref ProdCognitoUserPool
    ProdWebAppClient:
        Type: AWS::Cognito::UserPoolClient
        Properties:
            ClientName: ElasticProjectManagementWebClient
            GenerateSecret: false
            UserPoolId: !Ref ProdCognitoUserPool
            AccessTokenValidity: 3600
            IdTokenValidity: 3600
            RefreshTokenValidity: 2592000
            TokenValidityUnits:
                AccessToken: seconds
                IdToken: seconds
                RefreshToken: seconds
            ExplicitAuthFlows:
                - ALLOW_USER_PASSWORD_AUTH
                - ALLOW_REFRESH_TOKEN_AUTH
                - ALLOW_USER_SRP_AUTH
    ProdAuthenticatedOnlyApi:
        Type: AWS::Serverless::Api
        Properties:
            StageName: Prod
            Name: Prod Authenticated Only Api
            Auth:
                DefaultAuthorizer: ProdCognitoUserPool
                Authorizers:
                    ProdCognitoUserPool:
                        Identity:
                            Header: AuthHeader
                        UserPoolArn:
                            Fn::GetAtt: [ProdCognitoUserPool, Arn]
    GetCompaniesForUserFunction:
        Type: AWS::Serverless::Function
        Properties:
            Events:
                ApiEvent:
                    Type: Api
                    Properties:
                        Path: /companies
                        Method: get
                        RestApiId:
                            Ref: ProdAuthenticatedOnlyApi
            Runtime: nodejs14.x
            Handler: index.getCompaniesForUser
            FunctionName: GetCompaniesForUser
            Policies:
                - AmazonDynamoDBFullAccess
            CodeUri: code/built/getCompaniesForUser
    CreateBoardForCompanyFunction:
        Type: AWS::Serverless::Function
        Properties:
            Events:
                ApiEvent:
                    Type: Api
                    Properties:
                        Path: /board
                        Method: post
                        RestApiId:
                            Ref: ProdAuthenticatedOnlyApi
            Runtime: nodejs14.x
            Handler: index.createBoardForCompany
            FunctionName: CreateBoardForCompany
            Policies:
                - AmazonDynamoDBFullAccess
            CodeUri: code/built/createBoardForCompany
    GetBoardsForCompanyFunction:
        Type: AWS::Serverless::Function
        Properties:
            Events:
                ApiEvent:
                    Type: Api
                    Properties:
                        Path: /boards
                        Method: get
                        RestApiId:
                            Ref: ProdAuthenticatedOnlyApi
            Runtime: nodejs14.x
            Handler: index.getBoardsForCompany
            FunctionName: GetBoardsForCompany
            Policies:
                - AmazonDynamoDBFullAccess
            CodeUri: code/built/getBoardsForCompany
    UpdateBoardColumnInformation:
        Type: AWS::Serverless::Function
        Properties:
            Events:
                ApiEvent:
                    Type: Api
                    Properties:
                        Path: /updateBoardColumnInformation
                        Method: post
                        RestApiId:
                            Ref: ProdAuthenticatedOnlyApi
            Runtime: nodejs14.x
            Handler: index.updateBoardColumnInformation
            FunctionName: UpdateBoardColumnInformation
            Policies:
                - AmazonDynamoDBFullAccess
            CodeUri: code/built/updateBoardColumnInformation
    GetBoardColumnInformation:
        Type: AWS::Serverless::Function
        Properties:
            Events:
                ApiEvent:
                    Type: Api
                    Properties:
                        Path: /getBoardColumnInformation
                        Method: get
                        RestApiId:
                            Ref: ProdAuthenticatedOnlyApi
            Runtime: nodejs14.x
            Handler: index.getBoardColumnInformation
            FunctionName: GetBoardColumnInformation
            Policies:
                - AmazonDynamoDBFullAccess
            CodeUri: code/built/getBoardColumnInformation
    GetTicketTemplatesForBoard:
        Type: AWS::Serverless::Function
        Properties:
            Events:
                ApiEvent:
                    Type: Api
                    Properties:
                        Path: /getTicketTemplatesForBoard
                        Method: get
                        RestApiId:
                            Ref: ProdAuthenticatedOnlyApi
            Runtime: nodejs14.x
            Handler: index.getTicketTemplatesForBoard
            FunctionName: GetTicketTemplatesForBoard
            Policies:
                - AmazonDynamoDBFullAccess
            CodeUri: code/built/getTicketTemplatesForBoard
    CreateTicketTemplateForBoard:
        Type: AWS::Serverless::Function
        Properties:
            Events:
                ApiEvent:
                    Type: Api
                    Properties:
                        Path: /createTicketTemplateForBoard
                        Method: post
                        RestApiId:
                            Ref: ProdAuthenticatedOnlyApi
            Runtime: nodejs14.x
            Handler: index.createTicketTemplateForBoard
            FunctionName: CreateTicketTemplatesForBoard
            Policies:
                - AmazonDynamoDBFullAccess
            CodeUri: code/built/createTicketTemplateForBoard
    DeleteTicketTemplateForBoard:
        Type: AWS::Serverless::Function
        Properties:
            Events:
                ApiEvent:
                    Type: Api
                    Properties:
                        Path: /deleteTicketTemplateForBoard
                        Method: delete
                        RestApiId:
                            Ref: ProdAuthenticatedOnlyApi
            Runtime: nodejs14.x
            Handler: index.deleteTicketTemplateForBoard
            FunctionName: DeleteTicketTemplatesForBoard
            Policies:
                - AmazonDynamoDBFullAccess
            CodeUri: code/built/deleteTicketTemplateForBoard
    CreateTagForBoard:
        Type: AWS::Serverless::Function
        Properties:
            Events:
                ApiEvent:
                    Type: Api
                    Properties:
                        Path: /createTagForBoard
                        Method: post
                        RestApiId:
                            Ref: ProdAuthenticatedOnlyApi
            Runtime: nodejs14.x
            Handler: index.createTagForBoard
            FunctionName: CreateTagForBoard
            Policies:
                - AmazonDynamoDBFullAccess
            CodeUri: code/built/createTagForBoard
    GetAllTagsForBoard:
        Type: AWS::Serverless::Function
        Properties:
            Events:
                ApiEvent:
                    Type: Api
                    Properties:
                        Path: /getAllTagsForBoard
                        Method: get
                        RestApiId:
                            Ref: ProdAuthenticatedOnlyApi
            Runtime: nodejs14.x
            Handler: index.getAllTagsForBoard
            FunctionName: GetAllTagsForBoard
            Policies:
                - AmazonDynamoDBFullAccess
            CodeUri: code/built/getAllTagsForBoard
    GetPriorityListForBoard:
        Type: AWS::Serverless::Function
        Properties:
            Events:
                ApiEvent:
                    Type: Api
                    Properties:
                        Path: /getPriorityListForBoard
                        Method: get
                        RestApiId:
                            Ref: ProdAuthenticatedOnlyApi
            Runtime: nodejs14.x
            Handler: index.getPriorityListForBoard
            FunctionName: GetPriorityListForBoard
            Policies:
                - AmazonDynamoDBFullAccess
            CodeUri: code/built/getPriorityListForBoard
    UpdatePriorityListForBoard:
        Type: AWS::Serverless::Function
        Properties:
            Events:
                ApiEvent:
                    Type: Api
                    Properties:
                        Path: /updatePriorityListForBoard
                        Method: post
                        RestApiId:
                            Ref: ProdAuthenticatedOnlyApi
            Runtime: nodejs14.x
            Handler: index.updatePriorityListForBoard
            FunctionName: UpdatePriorityListForBoard
            Policies:
                - AmazonDynamoDBFullAccess
            CodeUri: code/built/updatePriorityListForBoard
    ProdDynamoDBTable:
        Type: AWS::DynamoDB::Table
        Properties:
            BillingMode: "PAY_PER_REQUEST"
            AttributeDefinitions:
                - AttributeName: "itemId"
                  AttributeType: "S"
                - AttributeName: "belongsTo"
                  AttributeType: "S"
                - AttributeName: "gsiSortKey"
                  AttributeType: "S"
            KeySchema:
                - AttributeName: "itemId"
                  KeyType: "HASH"
                - AttributeName: "belongsTo"
                  KeyType: "RANGE"
            TableName: "primaryTableOne"
            GlobalSecondaryIndexes:
                - IndexName: "parentToChild"
                  KeySchema:
                      - AttributeName: "belongsTo"
                        KeyType: "HASH"
                      - AttributeName: "itemId"
                        KeyType: "RANGE"
                  Projection:
                      ProjectionType: "ALL"
                - IndexName: "parentWithSortedChild"
                  KeySchema:
                      - AttributeName: "belongsTo"
                        KeyType: "HASH"
                      - AttributeName: "gsiSortKey"
                        KeyType: "RANGE"
                  Projection:
                      ProjectionType: "ALL"
Outputs:
    ProdPubliclyAccessibleApi:
        Description: "Public API Gateway endpoint URL for Prod"
        Value: !Sub "https://${ProdPubliclyAccessibleApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
    ProdAuthenticatedOnlyApi:
        Description: "Authenticated API Gateway endpoint URL for Prod"
        Value: !Sub "https://${ProdAuthenticatedOnlyApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
